axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
map_c <- ggplot() +
geom_density_2d_filled(data = get_plot_df(fish_biodiv_sf_km, "BRUV"), aes(x= lon , y = lat), contour_var = "count", alpha = 0.5) +
# facet_grid(. ~ SAMPLE.TYPE) +
geom_sf(data = nzshp_lores_WGS84_sf_km, color=alpha("grey20",1), alpha = 0.8) +
# geom_sf(data = fish_biodiv_sf_km_sid_buff, fill = NA, colour = "darkgrey") +
geom_sf(data = bbox_rgl_fish_biodiv_km, fill = NA, colour = "grey20", linetype = "dotted", size = 0.5) +
# geom_sf_label(data=bbox_rgl_fish_biodiv_km, aes(label = RESERVE.GROUP.LOCATION), nudge_x = 7, nudge_y = 6.5) +
stat_sf_coordinates(data = {fish_biodiv_sf_km |> filter(SAMPLE.TYPE == "BRUV")}, aes(shape = RESERVE.GROUP), color = "grey20", size = 2) +
stat_sf_coordinates(data = {fish_biodiv_sf_km |> filter(SAMPLE.TYPE == "BRUV")}, aes(shape = RESERVE.GROUP), color = "white", size = 1) +
coord_sf(xlim = c((619.6011-10), (653.8977+10)), ylim = c((-5100.241-10),(-5042.894+10)) , expand = FALSE) +
theme_bw() +
theme(legend.position= "none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
map_d <- ggplot() +
geom_density_2d_filled(data = get_plot_df(fish_biodiv_sf_km, "OBIS"), aes(x= lon , y = lat), contour_var = "count", alpha = 0.5) +
# facet_grid(. ~ SAMPLE.TYPE) +
geom_sf(data = nzshp_lores_WGS84_sf_km, color=alpha("grey20",1), alpha = 0.8) +
# geom_sf(data = fish_biodiv_sf_km_sid_buff, fill = NA, colour = "darkgrey") +
geom_sf(data = bbox_rgl_fish_biodiv_km, fill = NA, colour = "grey20", linetype = "dotted", size = 0.5) +
# geom_sf_label(data=bbox_rgl_fish_biodiv_km, aes(label = RESERVE.GROUP.LOCATION), nudge_x = 7, nudge_y = 6.5) +
stat_sf_coordinates(data = {fish_biodiv_sf_km |> filter(SAMPLE.TYPE == "OBIS")}, aes(shape = RESERVE.GROUP), color = "grey20", size = 2) +
stat_sf_coordinates(data = {fish_biodiv_sf_km |> filter(SAMPLE.TYPE == "OBIS")}, color = "white", size = 1) +
coord_sf(xlim = c((619.6011-10), (653.8977+10)), ylim = c((-5100.241-10),(-5042.894+10)) , expand = FALSE) +
theme_bw() +
theme(legend.position= "none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
htmp_tibl_fish <- bind_rows(
get_matrix_or_table(fish_biodiv_tbls, obs_methods = "eDNA",  tbl = TRUE) %>% add_column(SAMPLE.TYPE = "eDNA"),
get_matrix_or_table(fish_biodiv_tbls, obs_methods = "BRUV",  tbl = TRUE) %>% add_column(SAMPLE.TYPE = "BRUV"),
get_matrix_or_table(fish_biodiv_tbls, obs_methods = "OBIS",  tbl = TRUE) %>% add_column(SAMPLE.TYPE = "OBIS"),
get_matrix_or_table(fish_biodiv_tbls, obs_methods = "PUBL",  tbl = TRUE) %>% add_column(SAMPLE.TYPE = "PUBL"),
)
fish_biodiv_tbls <- fish_biodiv |> filter(!(SAMPLE.TYPE %in% c("OBIS") & SET.ID %in% c(1,3,4,5,7,8,9,10,11,12,17,18,19,21,22,23,24,26,27,28,29)))
saveRDS(fish_biodiv_tbls, "/Users/paul/Documents/OU_eDNA/201028_Robjects/210703_998_r_summarize_results__data_gtestimate_accumulation_curves.Rds")
htmp_tibl_fish <- bind_rows(
get_matrix_or_table(fish_biodiv_tbls, obs_methods = "eDNA",  tbl = TRUE) %>% add_column(SAMPLE.TYPE = "eDNA"),
get_matrix_or_table(fish_biodiv_tbls, obs_methods = "BRUV",  tbl = TRUE) %>% add_column(SAMPLE.TYPE = "BRUV"),
get_matrix_or_table(fish_biodiv_tbls, obs_methods = "OBIS",  tbl = TRUE) %>% add_column(SAMPLE.TYPE = "OBIS"),
get_matrix_or_table(fish_biodiv_tbls, obs_methods = "PUBL",  tbl = TRUE) %>% add_column(SAMPLE.TYPE = "PUBL"),
)
htmp_tibl_fish
# all asvs
fish_biodiv |> filter(SAMPLE.TYPE == "eDNA") |> select(ASV, SPECIES) |> distinct(SPECIES)
fish_biodiv |> filter(SAMPLE.TYPE == "eDNA") |> select(ASV, SPECIES) |> distinct(ASV)
fish_biodiv_blast <- fish_biodiv |>
filter(SAMPLE.TYPE == "eDNA") |>
select(ASV, RESERVE.GROUP.LOCATION, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>
arrange(FAMILY, GENUS, SPECIES)
spc_per_loc <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(SPC.PER.LOC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(SPECIES)
asv_per_spc <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(ASV.PER.SPC = n_distinct(ASV)) |> arrange(SPECIES)
spc_avg_gap <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(SPC.AVG.GAP = mean(HSP.GAPS)) |> arrange(SPECIES)
spc_avg_cov <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(SPC.AVG.COV = mean(HSP.IDENTITY.PERC)) |> arrange(SPECIES)
algn_test <- spc_per_loc |> left_join(asv_per_spc) |> left_join(spc_avg_gap) |> left_join(spc_avg_cov)
algn_test <- mutate(algn_test, NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
# model test and plotting: version 1 - averages
# ----------------------------------------------
# https://www.learnbymarketing.com/tutorials/linear-regression-in-r/
glm_mod <-  glm(SPC.PER.LOC ~ ASV.PER.SPC + SPC.AVG.GAP + SPC.AVG.COV + NOT.NZ, family = quasipoisson, data = algn_test)
summary(glm_mod)
sjPlot::plot_model(glm_mod, vline.color = "red",  show.values = TRUE) + theme_bw()
plot_model(glm_mod, type = "pred", terms = c("ASV.PER.SPC",  "SPC.AVG.GAP", "NOT.NZ"))  + theme_bw()
# model test and plotting: version 2 - ASV level
# ----------------------------------------------
# count locations per species
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
fish_asv_at_locs <- fish_biodiv_blast |> select(ASV, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>  left_join(fish_asv_at_locs)
# get a column with non-nz species as per above
fish_asv_at_locs <- fish_asv_at_locs |> mutate(NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
# save object for further inspection if desirable
saveRDS({fish_asv_at_locs |> select(LOC.PER.SPC, HSP.GAPS, HSP.IDENTITY.PERC, NOT.NZ)}, "/Users/paul/Documents/OU_eDNA/201028_Robjects/210703_998_r_summarize_results__data_spc_distribution_vs_quality.Rds")
# test relationship SPC.PER.LOC ~ HSP.GAPS + HSP.IDENTITY.PERC + NOT.NZ
# ----------------------------------------------------------------------
# https://www.learnbymarketing.com/tutorials/linear-regression-in-r/
glm_mod <-  glm(LOC.PER.SPC ~ HSP.GAPS + HSP.IDENTITY.PERC + NOT.NZ, family = quasipoisson, data = fish_asv_at_locs)
plot(glm_mod)
fish_asv_at_locs |> group_by(NOT.NZ) |> summarise(across(c("SPECIES", "ASV"), list(n_distinct)))
coeff_plot <- sjPlot::plot_model(glm_mod, vline.color = "red",  show.values = TRUE) +
theme_bw() +
scale_x_discrete(labels = c("Is Non-native", "Query cvg.", "Gap count")) +
ggtitle("Model coefficients: influences on location count per spcies")
ggsave("210712_998_r_summarize_results__coeff_plot.pdf", plot = coeff_plot,
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASV used for species assignment") +
ggtitle("Species at each location against eDNA alignmnet gaps, query coverage, or native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
ggsave("210712_998_r_summarize_results__asv_regression.pdf", plot = last_plot(),
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
tab_model(glm_mod)
library("sjPlot")
# count locations per species
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
fish_asv_at_locs <- fish_biodiv_blast |> select(ASV, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>  left_join(fish_asv_at_locs)
# get a column with non-nz species as per above
fish_asv_at_locs <- fish_asv_at_locs |> mutate(NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
# save object for further inspection if desirable
saveRDS({fish_asv_at_locs |> select(LOC.PER.SPC, HSP.GAPS, HSP.IDENTITY.PERC, NOT.NZ)}, "/Users/paul/Documents/OU_eDNA/201028_Robjects/210703_998_r_summarize_results__data_spc_distribution_vs_quality.Rds")
# ----------------------------------------------------------------------
# https://www.learnbymarketing.com/tutorials/linear-regression-in-r/
glm_mod <-  glm(LOC.PER.SPC ~ HSP.GAPS + HSP.IDENTITY.PERC + NOT.NZ, family = quasipoisson, data = fish_asv_at_locs)
plot(glm_mod)
# check_observation among true/false for figure legend
fish_asv_at_locs |> group_by(NOT.NZ) |> summarise(across(c("SPECIES", "ASV"), list(n_distinct)))
coeff_plot <- sjPlot::plot_model(glm_mod, vline.color = "red",  show.values = TRUE) +
theme_bw() +
scale_x_discrete(labels = c("Is Non-native", "Query cvg.", "Gap count")) +
ggtitle("Model coefficients: influences on location count per spcies")
coeff_plot
ggsave("210712_998_r_summarize_results__coeff_plot.pdf", plot = coeff_plot,
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASV used for species assignment") +
ggtitle("Species at each location against eDNA alignmnet gaps, query coverage, or native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
ggsave("210712_998_r_summarize_results__asv_regression.pdf", plot = last_plot(),
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
tab_model(glm_mod)
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASV used for species assignment") +
ggtitle("Species at each location against eDNA alignmnet gaps, query coverage, or native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASV used for species assignment") +
ggtitle("Location count for discovered spcies against eDNA alignmnet gaps, query coverage, or native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASV used for species assignment") +
ggtitle("Location count for discovered species against eDNA alignmnet gaps, query coverage, or non-native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
ggsave("210712_998_r_summarize_results__asv_regression.pdf", plot = last_plot(),
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASV used for species assignment") +
ggtitle("Species distribution against eDNA alignmnet gaps, query coverage, or non-native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
ggsave("210712_998_r_summarize_results__asv_regression.pdf", plot = last_plot(),
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
model_plot
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASVs used for species assignment") +
ggtitle("Species distribution against eDNA alignmnet gaps, query coverage, or non-native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
ggsave("210712_998_r_summarize_results__asv_regression.pdf", plot = last_plot(),
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
# for reporting - summaries for gaps and query coverage
fish_biodiv_blast_unq <- fish_biodiv_blast |> distinct(across(c("ASV","FAMILY", "SPECIES","NCBI.LEVEL", "NCBI.TAXDB.INC", "NCBI.TAXID", "NCBI.TAXID.INC", "HSP.GAPS", "HSP.IDENTITY.PERC")))
nrow(fish_biodiv_blast_unq) # 92 ASV resolved to species
fish_biodiv_blast_unq |> filter(HSP.GAPS == 0) |> filter(HSP.IDENTITY.PERC == 1)
fish_biodiv_blast_unq |> filter(HSP.IDENTITY.PERC != 1)
fish_biodiv_blast_unq |> filter(HSP.IDENTITY.PERC != 0) |> pull("FAMILY") |> unique()
fish_biodiv_blast_unq |> filter(HSP.GAPS != 0)
fish_biodiv_blast_unq |> filter(HSP.GAPS != 0) |> pull("FAMILY") |> unique()
summary(fish_biodiv_blast_unq$HSP.IDENTITY.PERC)
#  Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#  0.7868  0.8933  0.9702  0.9321  0.9763  1.0000
mean(fish_biodiv_blast_unq$HSP.IDENTITY.PERC)    # 0.9320525
sd(fish_biodiv_blast_unq$HSP.IDENTITY.PERC)      # 0.06863656
summary(fish_biodiv_blast_unq$HSP.GAPS)
#    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#       0       0       0       1       1      10
mean(fish_biodiv_blast_unq$HSP.GAPS)      # 1
sd(fish_biodiv_blast_unq$HSP.GAPS)      # 1.839732
fish_biodiv_blast_cov <- fish_biodiv_blast |>
group_by(SPECIES) |>
summarize(BLAST.COV.RNG =  ifelse( signif(100*min(HSP.IDENTITY.PERC), 3) != signif(100*max(HSP.IDENTITY.PERC),3),
paste0( signif(100*min(HSP.IDENTITY.PERC), 3), "-", signif(100*max(HSP.IDENTITY.PERC),3), "%"),
paste0( signif(100*min(HSP.IDENTITY.PERC),3), "%")
))
model_plot
tab_model(glm_mod)
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
fish_asv_at_locs <- fish_biodiv_blast |> select(ASV, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>  left_join(fish_asv_at_locs)
# get a column with non-nz species as per above
fish_asv_at_locs <- fish_asv_at_locs |> mutate(NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
fish_asv_at_locs
fish_asv_at_locs
fish_asv_at_locs |> select(LOC.PER.SPC, HSP.GAPS, HSP.IDENTITY.PERC, NOT.NZ)
fish_asv_at_locs
f <-fish_asv_at_locs
f$HSP <- 100 * f$HSP.IDENTITY.PERC
m <-  glm(LOC.PER.SPC ~ HSP.GAPS + HSP + NOT.NZ, family = poisson, data = f)
#plot(glm_mod)
summary(m)
exp(confint(m))
coeff_plot_b <- sjPlot::plot_model(glm_mod, vline.color = "red",  show.values = TRUE) +
theme_bw() +
scale_x_discrete(labels = c("Is Non-native", "Query cvg.", "Gap count")) +
ggtitle("Model coefficients: influences on location count per spcies")
coeff_plot_b
model_plot <- plot_model(m, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASVs used for species assignment") +
ggtitle("Species distribution against eDNA alignmnet gaps, query coverage, or non-native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASVs used for species assignment") +
ggtitle("Species distribution against eDNA alignmnet gaps, query coverage, or non-native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
model_plot_b <- plot_model(m, type = "pred", terms = c("HSP.GAPS", "HSP", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASVs used for species assignment") +
ggtitle("Species distribution against eDNA alignmnet gaps, query coverage, or non-native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot_b
tab_model(glm_mod)
tab_model(m)
tab_model(glm_mod)
tab_model(m)
tab_model(glm_mod)
tab_model(m)
exp(confint(m))
exp(confint(glm_mod))
exp(confint(m))
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
fish_asv_at_locs <- fish_biodiv_blast |> select(ASV, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>  left_join(fish_asv_at_locs)
# get a column with non-nz species as per above
fish_asv_at_locs <- fish_asv_at_locs |> mutate(NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
fish_asv_at_locs
fish_asv_at_locs <- fish_asv_at_locs |> mutate(HSP.IDENTITY.PERC = 100 * HSP.IDENTITY.PERC)
fish_asv_at_locs
saveRDS({fish_asv_at_locs |> select(LOC.PER.SPC, HSP.GAPS, HSP.IDENTITY.PERC, NOT.NZ)}, "/Users/paul/Documents/OU_eDNA/201028_Robjects/210703_998_r_summarize_results__data_spc_distribution_vs_quality.Rds")
saveRDS({fish_asv_at_locs |> select(LOC.PER.SPC, HSP.GAPS, HSP.IDENTITY.PERC, NOT.NZ)}, "/Users/paul/Documents/OU_eDNA/201028_Robjects/210703_998_r_summarize_results__data_spc_distribution_vs_quality.Rds")
fish_asv_at_locs
fish_asv_at_locs |> select(ASV, NOT.NZ)
fish_asv_at_locs |> select(ASV, NOT.NZ) |> distinct()
fish_asv_at_locs |> select(ASV, NOT.NZ) |> distinct() |> arrange(NOT.NZ)
fish_asv_at_locs |> select(ASV, NOT.NZ) |> distinct() |> group_by(NOT.NZ) |>
arrange(NOT.NZ)
fish_asv_at_locs |> select(SPECIES, NOT.NZ) |> distinct() |> group_by(NOT.NZ) |>
arrange(NOT.NZ)
fish_biodiv |> filter(SAMPLE.TYPE == "eDNA") |> select(ASV, SPECIES) |> distinct(SPECIES)
fish_biodiv |> filter(SAMPLE.TYPE == "eDNA") |> select(ASV, SPECIES) |> distinct(ASV)
# https://www.google.com/search?client=firefox-b-d&q=r+multinomial+logistic+regression
# https://stats.idre.ucla.edu/r/dae/multinomial-logistic-regression/
# test - ASV.PER.LOC ~ HSP.GAPS + HSP.IDENTITY.PERCENT + NOT.NZ
fish_biodiv_blast <- fish_biodiv |>
filter(SAMPLE.TYPE == "eDNA") |>
select(ASV, RESERVE.GROUP.LOCATION, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>
arrange(FAMILY, GENUS, SPECIES)
# count locations per species
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
fish_asv_at_locs <- fish_biodiv_blast |> select(ASV, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>  left_join(fish_asv_at_locs)
# get a column with non-nz species as per above
fish_asv_at_locs <- fish_asv_at_locs |> mutate(NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
# 21.08.2021 - not done yet - re-scale percentages as per MdL - for CIs more easily understandable
fish_asv_at_locs <- fish_asv_at_locs |> mutate(HSP.IDENTITY.PERC = 100 * HSP.IDENTITY.PERC)
fish_asv_at_locs
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
fish_asv_at_locs <- fish_biodiv_blast |> select(ASV, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>  left_join(fish_asv_at_locs)
# get a column with non-nz species as per above
fish_asv_at_locs <- fish_asv_at_locs |> mutate(NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
# 21.08.2021 -re-scale percentages as per MdL - for CIs more easily understandable
fish_asv_at_locs <- fish_asv_at_locs |> mutate(HSP.IDENTITY.PERC = 100 * HSP.IDENTITY.PERC)
saveRDS({fish_asv_at_locs |> select(LOC.PER.SPC, HSP.GAPS, HSP.IDENTITY.PERC, NOT.NZ)}, "/Users/paul/Documents/OU_eDNA/201028_Robjects/210703_998_r_summarize_results__data_spc_distribution_vs_quality.Rds")
fish_asv_at_locs |> select(ASV, NOT.NZ) |> distinct() |> group_by(NOT.NZ) |>
arrange(NOT.NZ) # 92 ASV: 39 False (42.4% True) / 53 True (57% True)
fish_asv_at_locs |> select(SPECIES, NOT.NZ) |> distinct() |> group_by(NOT.NZ) |>
arrange(NOT.NZ) # 44 SPECIES: 25 False (56.8% True) / 19 True (43.1% True)
glm_mod <-  glm(LOC.PER.SPC ~ HSP.GAPS + HSP.IDENTITY.PERC + NOT.NZ, family = quasipoisson, data = fish_asv_at_locs)
plot(glm_mod)
summary(glm_mod)
exp(confint(glm_mod))
# check_observation among true/false for figure legend
fish_asv_at_locs |> group_by(NOT.NZ) |> summarise(across(c("SPECIES", "ASV"), list(n_distinct)))
coeff_plot <- sjPlot::plot_model(glm_mod, vline.color = "red",  show.values = TRUE) +
theme_bw() +
scale_x_discrete(labels = c("Is Non-native", "Query cvg.", "Gap count")) +
ggtitle("Model coefficients: influences on location count per spcies")
coeff_plot
ggsave("210712_998_r_summarize_results__coeff_plot.pdf", plot = coeff_plot,
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.GAPS", "HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASVs used for species assignment") +
ggtitle("Species distribution against eDNA alignmnet gaps, query coverage, or non-native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
model_plot
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("Gap count in ASVs used for species assignment") +
ggtitle("Species distribution against eDNA alignmnet gaps, query coverage, or non-native status") +
labs(col = "Query coverage") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("query coverageof for eDNA assignmnets") +
ggtitle("Species distribution against eDNA query coverage, or non-native status") +
labs(col = "Not NZ") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("query coverage of for eDNA assignmnets") +
ggtitle("Species distribution against eDNA query coverage, or non-native status") +
labs(col = "Not NZ") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
ggsave("210712_998_r_summarize_results__asv_regression.pdf", plot = last_plot(),
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("query coverage of for eDNA assignmnets") +
ggtitle("Species distribution against eDNA query coverage, or non-native status") +
labs(col = "Not NZ") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
model_plot
model_plot <- plot_model(glm_mod, type = "pred", terms = c("HSP.IDENTITY.PERC", "NOT.NZ"), show.data = TRUE, jitter = 0.1, ci.lvl = 0.95) +
theme_bw() +
ylab("Locations where species found (max.: n = 6)") +
xlab("query coverage for eDNA assignmnets") +
ggtitle("Species distribution, query coverage, and non-native status") +
labs(col = "Not NZ") +
theme(legend.position = c(.2, .95),
legend.justification = c("right", "top"),
legend.box.just = "left",
legend.box.background = element_rect(color="grey30", size=0.5)
)
model_plot
ggsave("210712_998_r_summarize_results__asv_regression.pdf", plot = last_plot(),
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
ggsave("210712_998_r_summarize_results__asv_regression.pdf", plot = last_plot(),
device = "pdf", path = "/Users/paul/Documents/OU_eDNA/200403_manuscript/3_main_figures_and_tables_components",
scale = 1, width = 200, height = 135, units = c("mm"),
dpi = 500, limitsize = TRUE)
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
fish_asv_at_locs <- fish_biodiv_blast |> select(ASV, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>  left_join(fish_asv_at_locs)
# get a column with non-nz species as per above
fish_asv_at_locs <- fish_asv_at_locs |> mutate(NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
# 21.08.2021 -re-scale percentages as per MdL - for CIs more easily understandable
fish_asv_at_locs <- fish_asv_at_locs |> mutate(HSP.IDENTITY.PERC = 100 * HSP.IDENTITY.PERC)
fish_asv_at_locs
saveRDS(fish_asv_at_locs, "/Users/paul/Documents/OU_eDNA/201028_Robjects/210703_998_r_summarize_results__data_spc_distribution_vs_quality.Rds")
View(fish_asv_at_locs)
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
View(fish_asv_at_locs)
fish_biodiv_blast
fish_asv_at_locs <- fish_biodiv_blast |> group_by(SPECIES) |> summarize(LOC.PER.SPC = n_distinct(RESERVE.GROUP.LOCATION)) |> arrange(LOC.PER.SPC)
fish_asv_at_locs <- fish_biodiv_blast |> select(ASV, RESERVE.GROUP.LOCATION, FAMILY, GENUS, SPECIES, NCBI.LEVEL, NCBI.TAXDB.INC, NCBI.TAXID, NCBI.TAXID.INC, HSP.GAPS, HSP.IDENTITY.PERC) |>  left_join(fish_asv_at_locs)
fish_asv_at_locs <- fish_asv_at_locs |> mutate(NOT.NZ = as.factor(ifelse( grepl("*", SPECIES, fixed = TRUE), TRUE, FALSE)))
fish_asv_at_locs <- fish_asv_at_locs |> mutate(HSP.IDENTITY.PERC = 100 * HSP.IDENTITY.PERC)
View(fish_asv_at_locs)
saveRDS(fish_asv_at_locs, "/Users/paul/Documents/OU_eDNA/201028_Robjects/210703_998_r_summarize_results__data_spc_distribution_vs_quality.Rds")
fish_asv_at_locs |> select(ASV, NOT.NZ) |> distinct() |> group_by(NOT.NZ) |>
arrange(NOT.NZ) # 92 ASV: 39 False (42.4% True) / 53 True (57% True)
fish_asv_at_locs |> select(SPECIES, NOT.NZ) |> distinct() |> group_by(NOT.NZ) |>
arrange(NOT.NZ) # 44 SPECIES: 25 False (56.8% True) / 19 True (43.1% True)
# test relationship SPC.PER.LOC ~ HSP.GAPS + HSP.IDENTITY.PERC + NOT.NZ - version A [PC]
# ---------------------------------------------------------------------------------
# https://www.learnbymarketing.com/tutorials/linear-regression-in-r/
glm_mod <-  glm(LOC.PER.SPC ~ HSP.GAPS + HSP.IDENTITY.PERC + NOT.NZ, family = quasipoisson, data = fish_asv_at_locs)
plot(glm_mod)
fish_asv_at_locs |> group_by(NOT.NZ) |> summarise(across(c("SPECIES", "ASV"), list(n_distinct)))
coeff_plot <- sjPlot::plot_model(glm_mod, vline.color = "red",  show.values = TRUE) +
theme_bw() +
scale_x_discrete(labels = c("Is Non-native", "Query cvg.", "Gap count")) +
ggtitle("Model coefficients: influences on location count per spcies")
coeff_plot
fish_biodiv_blast
fish_biodiv_blast
htmp_tibl_fish
# all species
fish_biodiv |> filter(SAMPLE.TYPE == "eDNA") |> select(ASV, SPECIES) |> distinct(SPECIES)
# all asvs
fish_biodiv |> filter(SAMPLE.TYPE == "eDNA") |> select(ASV, SPECIES) |> distinct(ASV)
htmp_tibl_fish
fish_biodiv_blast <- fish_biodiv |>
filter(SAMPLE.TYPE == "eDNA") |>
arrange(FAMILY, GENUS, SPECIES)
fish_biodiv_blast
View(fish_biodiv_blast)
View(fish_biodiv)
View(fish_biodiv)
