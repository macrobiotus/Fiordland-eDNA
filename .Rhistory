openxlsx::write.xlsx
openxlsx::write.xlsx(filterAndTrimResults, file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered/0_dada2_filtering_results.xlsx")
filterAndTrimResults
class(filterAndTrimResults)
as_tibble(filterAndTrimResults)
data.frame(filterAndTrimResults)
openxlsx::write.xlsx(data.frame(filterAndTrimResults), file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered/0_dada2_filtering_results.xlsx")
filterAndTrimResults
filterAndTrimResults
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Github/060_r_dada2_fastqs.RData')
library("dplyr")
library("magritttr")
library("magrittr")
filterAndTrimResults %>% as_tibble %>%
filterAndTrimResults
filterAndTrimResults
filterAndTrimResults %>% as_tibble %>% filter(reads.in != 0 )
as_tibble(filterAndTrimResults, rownames = "sample") %>% filter(reads.in != 0 )
filterAndTrimResults <- as_tibble(filterAndTrimResults, rownames = "sample") %>% filter(reads.in != 0 )
fastq_paths_filtered
filterAndTrimResults
sample_names
filterAndTrimResults
filterAndTrimResults[["sample"]]
filterAndTrimResults <- filterAndTrim(fastq_paths, fastq_paths_filtered, truncLen = 280, maxN = 0, maxEE = 2, truncQ = 2, rm.phix = TRUE, compress = TRUE, multithread = TRUE, verbose = TRUE)
openxlsx::write.xlsx(data.frame(filterAndTrimResults), file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered/0_dada2_filtering_results.xlsx")
filterAndTrimResultsNotEmpty <- as_tibble(filterAndTrimResults, rownames = "sample") %>% filter(reads.in != 0 )
fastq_paths_filtered
errF <- learnErrors(fastq_paths_filtered, multithread=TRUE)
filterAndTrimResultsNotEmpty
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Github/060_r_dada2_fastqs.RData')
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Github/060_r_dada2_fastqs.RData')
openxlsx::write.xlsx(as_tibble(filterAndTrimResults, rownames = "sample"), file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered/0_dada2_filtering_results.xlsx")
filterAndTrimResultsNotEmpty
filterAndTrimResultsNotEmpty
filterAndTrimResultsNotEmpty[["sample"]]
filterAndTrimResults
fastq_paths_filtered
grepl( filterAndTrimResultsNotEmpty[["sample"]], fastq_paths_filtered, fixed = TRUE)
fastq_paths_filtered
fastq_paths_filtered[1]
filterAndTrimResultsNotEmpty[["sample"]], fastq_paths_filtered[1]
grepl( filterAndTrimResultsNotEmpty[["sample"]], fastq_paths_filtered[1], fixed = TRUE)
filterAndTrimResultsNotEmpty
filterAndTrimResultsNotEmpty[[sample]]
filterAndTrimResultsNotEmpty[["sample"]]
filterAndTrimResultsNotEmpty
paste(filterAndTrimResultsNotEmpty[["sample"]], "|")
paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|")
fastq_paths_filtered
ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "keep", "discard")
paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"
)
filterAndTrimResultsNotEmpty
fastq_paths
fastq_paths_filtered
filterAndTrimResults
filterAndTrimResultsNotEmpty
filterAndTrimResultsNotEmpty
filterAndTrimResultsNotEmpty[["sample"]]
str_remove(filterAndTrimResultsNotEmpty[["sample"]], "IU9LJG301__")
library("stringr")
filterAndTrimResultsNotEmpty <- as_tibble(filterAndTrimResults, rownames = "sample") %>% filter(reads.in != 0 )
filterAndTrimResultsNotEmpty
str_remove(filterAndTrimResultsNotEmpty[["sample"]], "IU9LJG301__") filterAndTrimResultsNotEmpty
str_remove(filterAndTrimResultsNotEmpty[["sample"]], "IU9LJG301__")
filterAndTrimResultsNotEmpty[["sample"]]
filterAndTrimResultsNotEmpty
filterAndTrimResultsNotEmpty <- as_tibble(filterAndTrimResults, rownames = "sample") %>% filter(reads.in != 0 )
filterAndTrimResultsNotEmpty
filterAndTrimResultsNotEmpty[["sample"]] <- str_remove(filterAndTrimResultsNotEmpty[["sample"]], "IU9LJG301__")
filterAndTrimResultsNotEmpty
ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "keep", "discard")
fastq_paths_filtered
fastq_paths_filtered_tibble as_tibble(fastq_paths_filtered)
fastq_paths_filtered
fastq_paths_filtered_tibble <- as_tibble(fastq_paths_filtered)
fastq_paths_filtered_tibble
fastq_paths_filtered_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered <- value)
fastq_paths_filtered_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered = value)
fastq_paths_filtered_tibble
fastq_paths_filtered_tibble %>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "keep", "discard"))
fastq_paths_filtered_tibble %>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "keep", "discard"))
library("tibble")
fastq_paths_filtered_tibble %>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "keep", "discard"))
fastq_paths_filtered_tibble %>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "keep", "discard")) %>% rename(keep = `ifelse(...)`)
fastq_paths
fastq_paths_filtered_tibble
fastq_paths_filtered
fastq_paths_filtered_tibble %>% add_column(fastq_paths)
fastx_path_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered = value)
fastx_path_tibble
fastx_path_tibble %>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "usable", "empty")) %>% rename(keep = `ifelse(...)`)
filterAndTrimResults
fastx_path_tibble %>% add_column(fastq_paths)
fastx_path_tibble %<>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "usable", "empty")) %>% rename(keep = `ifelse(...)`)
fastx_path_tibble %<>% add_column(fastq_paths)
fastx_path_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered = value)
fastx_path_tibble %<>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "usable", "empty")) %>% rename(keep = `ifelse(...)`)
fastx_path_tibble %<>% add_column(fastq_paths)
fastx_path_tibble
filterAndTrimResultsNotEmpty
filterAndTrimResults
fastx_path_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered = value)
fastx_path_tibble %<>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "usable", "empty")) %>% rename(keep = `ifelse(...)`)
fastx_path_tibble %<>% add_column(fastq_paths)
fastx_path_tibble
fastx_path_tibble %<>% relocate(fastq_paths_filtered, .after = fastq_paths)
fastx_path_tibble
fastx_path_tibble
View(fastx_path_tibble)
fastx_path_tibble
fastx_path_tibble %>% filter(keep == "usable")
fastx_path_tibble %>% filter(keep == "usable") %>% pulll(fastq_paths_filtered)
fastx_path_tibble %>% filter(keep == "usable") %>% pull(fastq_paths_filtered)
errF <- learnErrors(fastq_paths_filtered_non_empty, multithread=TRUE)
fastq_paths_filtered_non_empty <-  fastx_path_tibble %>% filter(keep == "usable") %>% pull(fastq_paths_filtered)
errF <- learnErrors(fastq_paths_filtered_non_empty, multithread=TRUE)
fastq_paths_filtered_non_empty
errF <- learnErrors("/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered", multithread=TRUE)
errF
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Github/060_r_dada2_fastqs.RData')
plotErrors(errF, nominalQ=TRUE)
plotErrors(errF, nominalQ=TRUE)
errF <- learnErrors("/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered", multithread=TRUE, nbases = 250)
errF <- learnErrors("/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered", multithread=TRUE)
plotErrors(errF, nominalQ=TRUE)
ggsave(
filename = paste0("0_dada2_error_model", ".pdf") ,
plot = last_plot(),
device = "pdf",
path = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered",
scale = 1,
width = 4,
height = 3,
units = "in",
dpi = 200,
limitsize = TRUE
)
ggsave(
filename = paste0("0_dada2_error_model", ".pdf") ,
plot = last_plot(),
device = "pdf",
path = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered",
scale = 2,
width = 4,
height = 3,
units = "in",
dpi = 200,
limitsize = TRUE
)
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Github/060_r_dada2_fastqs.RData')
fastq_paths_filtered
derepFs <- derepFastq(fastq_paths_filtered, verbose=TRUE)
derepFs <- derepFastq("/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered", verbose=TRUE)
derepFs
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Github/060_r_dada2_fastqs.RData')
names(derepFs)
sample.names
names(derepFs)
derepFs
errF
dadaFs <- dada(derepFs, err = errF, multithread = TRUE)
dadaFs
seqtab <- makeSequenceTable(dadaFs)
seqtab
dim(seqtab)
table(nchar(getSequences(seqtab)))
seqtab_nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=TRUE, verbose=TRUE)
sum(seqtab.nochim)/sum(seqtab)
sum(seqtab_nochim)/sum(seqtab)
sum(seqtab_nochim)
sum(seqtab)
sum(seqtab) - sum(seqtab_nochim)
getN <- function(x) sum(getUniques(x))
out
track <- cbind(filterAndTrimResults, sapply(dadaFs, getN), rowSums(seqtab.nochim))
track <- cbind(filterAndTrimResults, sapply(dadaFs, getN), rowSums(seqtab_nochim))
seqtab_nochim
rowSums(seqtab_nochim)
sapply(dadaFs, getN)
filterAndTrimResults
filterAndTrimResults %>% filter(reads.in != 0)
filterAndTrimResults
class(filterAndTrimResults)
filterAndTrimResults
filterAndTrimResults[filterAndTrimResults[ , "reads.in"] != 0, ]
track <- cbind(filterAndTrimResults[filterAndTrimResults[ , "reads.in"] != 0, ], sapply(dadaFs, getN), rowSums(seqtab_nochim))
track <- cbind(filterAndTrimResults[filterAndTrimResults[ , "reads.out"] != 0, ], sapply(dadaFs, getN), rowSums(seqtab_nochim))
track
colnames(track) <- c("input", "filtered", "denoised", "nonchim")
sample.names
track
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
head(track)
fastx_path_tibble
track
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
track
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
str_remove(rownames(track), "IU9LJG301__")
colnames(track) <- c("input", "filtered", "denoised", "nonchim")
track
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
rownames(track)
track
getN <- function(x) sum(getUniques(x))
track <- cbind(filterAndTrimResults[filterAndTrimResults[ , "reads.out"] != 0, ], sapply(dadaFs, getN), rowSums(seqtab_nochim))
# If processing a single sample, remove the sapply calls: e.g. replace sapply(dadaFs, getN) with getN(dadaFs)
colnames(track) <- c("input", "filtered", "denoised", "nonchim")
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
track
track <- NULL
track <- cbind(filterAndTrimResults[filterAndTrimResults[ , "reads.out"] != 0, ], sapply(dadaFs, getN), rowSums(seqtab_nochim))
colnames(track) <- c("input", "filtered", "denoised", "nonchim")
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
track
track <- NULL
track <- cbind(filterAndTrimResults[filterAndTrimResults[ , "reads.out"] != 0, ], sapply(dadaFs, getN), rowSums(seqtab_nochim))
track
colnames(track) <- c("input", "filtered", "denoised", "nonchim")
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
rownames(track) <- str_remove(rownames(track), "IU9LJG302__")
track
fastx_path_tibble
fastx_path_tibble %>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble
track
left_join(fastx_path_tibble, track)
track
left_join(fastx_path_tibble, track, copy = TRUE)
left_join(fastx_path_tibble, as_tible(track, rownames = "join_key"))
left_join(fastx_path_tibble, as_tibble(track, rownames = "join_key"))
fastx_path_tibble
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, ".fastq.gz" ))
fastx_path_tibble
fastx_path_tibble %<>% rename(sample_id = join_key) %>% relocate(sample_id)
fastx_path_tibble
View()
View(fastx_path_tibble)
as_tibble(track, rownames = "join_key")
fastx_path_tibble
fastx_path_tibble <- left_join(fastx_path_tibble, as_tibble(track, rownames = "join_key"))
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble
fastx_path_tibble <- left_join(fastx_path_tibble, as_tibble(track, rownames = "join_key"))
fastx_path_tibble
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, ".fastq.gz" ))
fastx_path_tibble
fastx_path_tibble %<>% rename(sample_id = join_key) %>% relocate(sample_id)
fastx_path_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered = value)
fastx_path_tibble %<>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "usable", "empty")) %>% rename(keep = `ifelse(...)`)
fastx_path_tibble %<>% add_column(fastq_paths)
fastx_path_tibble %<>% relocate(fastq_paths_filtered, .after = fastq_paths)
fastx_path_tibble
track <- NULL
track <- cbind(filterAndTrimResults[filterAndTrimResults[ , "reads.out"] != 0, ], sapply(dadaFs, getN), rowSums(seqtab_nochim))
colnames(track) <- c("input", "filtered", "denoised", "nonchim")
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
rownames(track) <- str_remove(rownames(track), "IU9LJG302__")
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble
fastx_path_tibble <- left_join(fastx_path_tibble, as_tibble(track, rownames = "join_key"))
fastx_path_tibble
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, ".fastq.gz" ))
fastx_path_tibble
fastx_path_tibble %<>% rename(sample_id = join_key) %>% relocate(sample_id)
fastx_path_tibble
fastx_path_tibble %>% print(n = Inf)
filterAndTrimResultsNotEmpty
filterAndTrimResultsNotEmpty %>% print(n = Inf)
filterAndTrimResultsNotEmpty <- as_tibble(filterAndTrimResults, rownames = "sample") %>% filter(reads.in != 0 )
filterAndTrimResultsNotEmpty %>% print(n = Inf)
filterAndTrimResultsNotEmpty[["sample"]] <- str_remove(filterAndTrimResultsNotEmpty[["sample"]], "IU9LJG301__")
filterAndTrimResultsNotEmpty[["sample"]] <- str_remove(filterAndTrimResultsNotEmpty[["sample"]], "IU9LJG302__")
fastx_path_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered = value)
fastx_path_tibble %<>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "usable", "empty")) %>% rename(keep = `ifelse(...)`)
fastx_path_tibble %<>% add_column(fastq_paths)
fastx_path_tibble %<>% relocate(fastq_paths_filtered, .after = fastq_paths)
fastx_path_tibble %>% print(n = Inf)
getN <- function(x) sum(getUniques(x))
track <- NULL
track <- cbind(filterAndTrimResults[filterAndTrimResults[ , "reads.out"] != 0, ], sapply(dadaFs, getN), rowSums(seqtab_nochim))
colnames(track) <- c("input", "filtered", "denoised", "nonchim")
rownames(track) <- str_remove(rownames(track), "IU9LJG301__")
rownames(track) <- str_remove(rownames(track), "IU9LJG302__")
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble <- left_join(fastx_path_tibble, as_tibble(track, rownames = "join_key"))
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, ".fastq.gz" ))
fastx_path_tibble %<>% rename(sample_id = join_key) %>% relocate(sample_id)
fastx_path_tibble %>% print(n = Inf)
track
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG302__"))
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG302__"))
fastx_path_tibble <- left_join(fastx_path_tibble, as_tibble(track, rownames = "join_key"))
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, ".fastq.gz" ))
fastx_path_tibble %<>% rename(sample_id = join_key) %>% relocate(sample_id)
fastx_path_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered = value)
fastx_path_tibble %<>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "usable", "empty")) %>% rename(keep = `ifelse(...)`)
fastx_path_tibble %<>% add_column(fastq_paths)
fastx_path_tibble %<>% relocate(fastq_paths_filtered, .after = fastq_paths)
fastx_path_tibble %>% print(n = Inf)
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble %<>% mutate(join_key = str_remove(fastq_paths, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG302__"))
fastx_path_tibble <- left_join(fastx_path_tibble, as_tibble(track, rownames = "join_key"))
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, ".fastq.gz" ))
fastx_path_tibble %<>% rename(sample_id = join_key) %>% relocate(sample_id)
fastx_path_tibble %>% print(n = Inf)
fastx_path_tibble <- as_tibble(fastq_paths_filtered) %>% rename(fastq_paths_filtered = value)
fastx_path_tibble %<>% add_column(ifelse(grepl( paste(filterAndTrimResultsNotEmpty[["sample"]], collapse="|"), fastq_paths_filtered), "usable", "empty")) %>% rename(keep = `ifelse(...)`)
fastx_path_tibble %<>% add_column(fastq_paths)
fastx_path_tibble %<>% relocate(fastq_paths_filtered, .after = fastq_paths)
fastx_path_tibble %>% print(n = Inf)
fastx_path_tibble
track
fastx_path_tibble %<>% mutate(join_key = fastq_paths)
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG301__"))
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Cutadapt/IU9LJG302__"))
fastx_path_tibble <- left_join(fastx_path_tibble, as_tibble(track, rownames = "join_key"))
fastx_path_tibble %<>% mutate(join_key = str_remove(join_key, ".fastq.gz" ))
fastx_path_tibble %<>% rename(sample_id = join_key) %>% relocate(sample_id)
fastx_path_tibble %>% print(n = Inf)
openxlsx::write.xlsx(fastx_path_tibble, file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Dada2_filtered/0_dada2_filtering_results.xlsx")
seqtab_nochim
phyloseq::otu_table(seqtab.nochim, taxa_are_rows=FALSE))
phyloseq::otu_table(seqtab.nochim, taxa_are_rows=FALSE)
BiocManager::install("phyloseq")
library("phyloseq"); packageVersion("phyloseq")
phyloseq::otu_table(seqtab.nochim, taxa_are_rows=FALSE)
phyloseq::otu_table(seqtab_nochim, taxa_are_rows=FALSE)
foo <- phyloseq::otu_table(seqtab_nochim, taxa_are_rows=FALSE)
foo
str(foo)
str(seqtab_nochim)
View(seqtab_nochim)
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Github/060_r_dada2_fastqs.RData')
tr(seqtab_nochim)
tr
transpose(seqtab_nochim)
class(seqtab_nochim)
t(seqtab_nochim)
View(t(seqtab_nochim))
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Github/060_r_dada2_fastqs.RData')
View(t(seqtab_nochim))
as_tibble(t(seqtab_nochim)))
as_tibble(t(seqtab_nochim))
as_tibble(t(seqtab_nochim), rownames = fastx)
as_tibble(t(seqtab_nochim), rownames = "fastx")
as_tibble(seqtab_nochim), rownames = "sample_id")
as_tibble(seqtab_nochim, rownames = "sample_id")
seq_tibble <- as_tibble(seqtab_nochim, rownames = "sample_id")
seq_tibble
seq_tibble
library("cli")
names(seq_tibble)
seqs_hashes <- hash_raw_sha256(names(seq_tibble))
hash_sha256
seqs_hashes <- hash_sha256(names(seq_tibble))
seqs_hashes
names(seq_tibble) <-  hash_sha256(names(seq_tibble))
seq_tibble
seq_tibble <- as_tibble(seqtab_nochim, rownames = "sample_id")
hash_sha256(names(seq_tibble)[2:length(names(seq_tibble))])
seq_tibble <- as_tibble(seqtab_nochim, rownames = "sample_id")
# _b) Calculating hashes ----
seqs <- names(seq_tibble)
seqs_hashes <- hash_sha256(names(seq_tibble))
names(seq_tibble)[2:length(names(seq_tibble))] <-  hash_sha256(names(seq_tibble)[2:length(names(seq_tibble))])
names(seq_tibble)
seq_tibble
bind_cols(seqs_hashes, seqs)
seq_tibble <- as_tibble(seqtab_nochim, rownames = "sample_id")
seqs <- names(seq_tibble)[2:length(names(seq_tibble))]
seqs
seqs_hashes <- hash_sha256(names(seq_tibble)[2:length(names(seq_tibble))])
seqs_hashes
names(seq_tibble)[2:length(names(seq_tibble))] <-  hash_sha256(names(seq_tibble)[2:length(names(seq_tibble))])
bind_cols(seqs_hashes, seqs)
bind_cols(seqs_hashes, seqs, rownames = c("hash", "sequence")
)
bind_cols(seqs_hashes, seqs, names = c("hash", "sequence"))
bind_cols(seqs_hashes, seqs) %>% setNames("hash", "sequence")
bind_cols(seqs_hashes, seqs)
bind_cols(seqs_hashes, seqs) %>% names("hash", "sequence")
seq_tibble
sampl_tibble <- as_tibble(seqtab_nochim, rownames = "sample_id")
seqs <- names(sampl_tibble)[2:length(names(sampl_tibble))]
seqs_hashes <- hash_sha256(names(sampl_tibble)[2:length(names(sampl_tibble))])
seqs
seqs_hashes
names(sampl_tibble)[2:length(names(sampl_tibble))] <-  hash_sha256(names(sampl_tibble)[2:length(names(sampl_tibble))])
sequ_tibble <- bind_cols(seqs_hashes, seqs) %>%
sequ_tibble
sequ_tibble <- bind_cols(seqs_hashes, seqs)
sequ_tibble
names(sequ_tibble)  <- c("hash", "sequence")
sequ_tibble
sequ_tibble[["hash"]]
sampl_tibble
sequ_tibble[["hash"]] %in%  names(sampl_tibble)[2:length(names(sampl_tibble))]
sequ_tibble[["hash"]] %in% names(sampl_tibble)[2:length(names(sampl_tibble))]
names(sampl_tibble)[2:length(names(sampl_tibble))] %in% sequ_tibble[["hash"]]
saveRDS(sampl_tibble)
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/R/060_r_dada2_fastqs.RData')
saveRDS(sequ_tibble, file='/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/R/060_sequ_tibble.RData')
saveRDS(sampl_tibble, file='/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/R/060_sampl_tibble.RData')
openxlsx::write.xlsx(fastx_path_tibble, file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Excel/0_dada2_filtering_results.xlsx")
openxlsx::write.xlsx(fastx_path_tibble, file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Excel/060_dada2_filtering_results.xlsx")
ggsave(
filename = paste0("060_dada2_error_model", ".pdf") ,
plot = last_plot(),
device = "pdf",
path = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Plots",
scale = 2,
width = 4,
height = 3,
units = "in",
dpi = 200,
limitsize = TRUE
)
for (path in fastq_paths){
if (!file.exists(
paste0(
"/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Plots/060_",
basename(path),
".pdf"
)
))
{
message(paste0(
"Attempting to re-write file: \"",
paste0(
"/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Plots/060_",
basename(path),
".pdf\"."
)
))
attempt <- NULL
attempt <- try(plotQualityProfile(path), silent = TRUE)
if (class(attempt)[1]  !=  "try-error"  )
{
ggsave(
filename = paste0(basename(path), ".pdf") ,
plot = last_plot(),
device = "pdf",
path = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Plots/060_",
scale = 1,
width = 4,
height = 3,
units = "in",
dpi = 200,
limitsize = TRUE
)
}
}
}
for (path in fastq_paths){
if (!file.exists(
paste0(
"/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Plots/060_",
basename(path),
".pdf"
)
))
{
message(paste0(
"Attempting to re-write file: \"",
paste0(
"/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Plots/060_",
basename(path),
".pdf\"."
)
))
attempt <- NULL
attempt <- try(plotQualityProfile(path), silent = TRUE)
if (class(attempt)[1]  !=  "try-error"  )
{
ggsave(
filename = paste0("060_", basename(path), ".pdf") ,
plot = last_plot(),
device = "pdf",
path = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Plots/",
scale = 1,
width = 4,
height = 3,
units = "in",
dpi = 200,
limitsize = TRUE
)
}
}
}
openxlsx::write.xlsx(sequ_tibble, file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Excel/060_sequ_tibble.xlsx")
openxlsx::write.xlsx(sampl_tibble, file = "/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Excel/060_sampl_tibble.xlsx")
library("biostrings")
install.packages("biostrings")
BiocManager::install("Biostrings")
library("Biostrings")
install.packages("tidysq")
library("tidysq")
as.sq(sequ_tibble)
sequ_tibble
as.sq(sequ_tibble[["sequence"]])
sequ_tibble[["hash"]]
write_fasta(as.sq(sequ_tibble[["sequence"]]), sequ_tibble[["hash"]],
"/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/Blast/060_sequ_tibble.fasta")
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/R/060_r_dada2_fastqs.RData')
save.image(file='/Users/paul/Documents/OU_pcm_invertebrates/Zenodo/R/060_r_dada2_fastqs.RData')
